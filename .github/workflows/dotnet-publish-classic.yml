# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: publish

on:
  push:
    tags:
      - 'v*'

env:
  DOTNET_VERSION: '7' # The .NET SDK version to use
  DOTNET_SOURCE: './Source'
  DOTNET_CONFIGURATION: 'Release'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Restore dependencies
      run: dotnet restore ${{ env.DOTNET_SOURCE }}/Libation.sln
    - name: Build
      run: |
        dotnet publish -c ${{ DOTNET_CONFIGURATION }} ${{ env.DOTNET_SOURCE }}\LibationWinForms\LibationWinForms.csproj -p:PublishProfile=LibationWinForms\Properties\PublishProfiles\WindowsProfile.pubxml --no-restore 
        dotnet publish -c ${{ DOTNET_CONFIGURATION }} ${{ env.DOTNET_SOURCE }}\LoadByOS\WindowsConfigApp\WindowsConfigApp.csproj -p:PublishProfile=LoadByOS\WindowsConfigApp\Properties\PublishProfiles\WindowsProfile.pubxml --no-restore 
        dotnet publish -c ${{ DOTNET_CONFIGURATION }} ${{ env.DOTNET_SOURCE }}\LibationCli\LibationCli.csproj -p:PublishProfile=LibationCli\Properties\PublishProfiles\WindowsProfile.pubxml --no-restore 
        dotnet publish -c ${{ DOTNET_CONFIGURATION }} ${{ env.DOTNET_SOURCE }}\HangoverWinForms\HangoverWinForms.csproj -p:PublishProfile=HangoverWinForms\Properties\PublishProfiles\WindowsProfile.pubxml --no-restore 
    - name: Publish Artifact
      uses: actions/upload-artifact@v3
      with:
        name: LibationClassicWindows
        path: ${{ env.DOTNET_SOURCE }}/bin/${{ env.DOTNET_CONFIGURATION }}/
        if-no-files-found: error

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: LibationClassicWindows
          path: ./Classic-Libation.${{ github.ref_name }}-win-classic

      - name: Zip Artifact
        run: zip -r Classic-Libation.${{ github.ref_name }}-win-classic.zip ./Libation-${{ github.ref_name }}

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Libation ${{ github.ref }}
          body: <Put a body here>
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Libation.${{ github.ref_name }}.zip
          asset_name: Libation.${{ github.ref_name }}.zip
          asset_content_type: application/zip